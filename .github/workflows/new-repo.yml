name: New repo creator

on:
  issues:
    types: [ opened, edited ]
  issue_comment:
    types: [ created ]

jobs:
  handle_new:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issues' &&
      startsWith(github.event.issue.title, 'New Repo')
    steps:
      - name: Add label and assign owner
        uses: Naturalclar/issue-action@v1.0.0
        with:
          keywords: '["New Repo"]'
          assignees: '["amis92"]'
          labels: '["new repo"]'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Comment on the issue with preview information for new repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CREATE_REPO_TOKEN: ${{ secrets.AMIS92_REPO_CREATION_GITHUB_TOKEN }}
        shell: pwsh
        run: './.github/scripts/NewRepoNamesPreview.ps1'
    
  preview_comment:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issue_comment' &&
      contains(github.event.issue.labels.*.name, 'new repo') &&
      startsWith(github.event.comment.body, '.preview')
    steps:
      - uses: actions/checkout@v2
      - name: Comment on the issue with preview information for new repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CREATE_REPO_TOKEN: ${{ secrets.AMIS92_REPO_CREATION_GITHUB_TOKEN }}
        shell: pwsh
        run: './.github/scripts/HandlePreviewComment.ps1'

  approve_comment:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issue_comment' &&
      contains(github.event.issue.labels.*.name, 'new repo') &&
      startsWith(github.event.comment.body, '.approve')
    steps:
    - uses: actions/checkout@v2
    - name: Run the repository creation script
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CREATE_REPO_TOKEN: ${{ secrets.AMIS92_REPO_CREATION_GITHUB_TOKEN }}
      shell: pwsh
      run: './.github/scripts/HandleApproveComment.ps1'

name: New repo issue

on:
  issues:
    types: [ opened, edited ]

jobs:
  handle_new:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.state == 'open' &&
      startsWith(github.event.issue.title, 'New Repo')
    steps:
      - name: Add 'new repo' label
        if: "!contains(github.event.issue.labels.*.name, 'new repo')"
        uses: actions/github-script@v1
        with:
          script: |
            await github.issues.addLabels({
              ...context.repo,
              issue_number: context.issue.number,
              labels: ['new repo']}
            )
      - uses: actions/checkout@v2
      - name: Run preview comment creation script
        id: create_script
        shell: pwsh
        env:
          EVENT_JSON: ${{ toJson(github.event) }}
        run: './github/scripts/GetPreviewComment.ps1 ($env:EVENT_JSON | ConvertFrom-Json)'
      - name: Create comment with preview info
        uses: actions/github-script@v1
        env:
          COMMENT_TEXT: ${{ steps.create_script.outputs.comment }}
        with:
          script: |
            const comment = process.env.COMMENT_TEXT
            await github.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: comment
            })
